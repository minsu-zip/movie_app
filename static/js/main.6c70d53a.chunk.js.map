{"version":3,"sources":["Movies.jsx","App.js","index.js"],"names":["Movies","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","useState","isLoading","setIsLoading","movies","setMovies","getMovies","a","axios","get","data","useEffect","movie","medium_cover_image","ReactDOM","render","document","getElementById"],"mappings":"iRAkCeA,G,MA9BA,SAAC,GAAiD,EAA/CC,GAAgD,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAChD,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IAErC,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,wBAAIC,IAAKD,EAAOL,UAAU,iBAErBI,OAGT,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,WC4BDC,G,MA1CH,WAAO,IAAD,EACkBC,oBAAS,GAD3B,mBACTC,EADS,KACEC,EADF,OAEYF,mBAAS,IAFrB,mBAETG,EAFS,KAEDC,EAFC,KAIVC,EAAS,uCAAG,8BAAAC,EAAA,sEAC6BC,IAAMC,IAAI,4DADvC,gBACQL,EADR,EACRM,KAAQA,KAAQN,OAExBC,EAAUD,GACVD,GAAa,GAJG,2CAAH,qDAWf,OAJAQ,qBAAU,WACRL,MACA,IAGE,6BAASd,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAGF,yBAAKA,UAAU,UACZY,EAAOT,KAAI,SAAAiB,GACV,OACE,kBAAC,EAAD,CACEd,IAAKc,EAAM1B,GACXA,GAAI0B,EAAM1B,GACVC,KAAMyB,EAAMzB,KACZC,MAAOwB,EAAMxB,MACbC,QAASuB,EAAMvB,QACfC,OAAQsB,EAAMC,mBACdtB,OAAQqB,EAAMrB,gBChChCuB,IAASC,OACP,oCACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.6c70d53a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Movie.css\";\r\n\r\nconst Movies = ({ id, year, title, summary, poster, genres }) => {\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            \r\n            <div className=\"movie__data\">\r\n                <h3 className=\"movie__title\">{title}</h3>\r\n                <h5 className=\"movie__year\">{year}</h5>\r\n                <ul className=\"movie__genres\">\r\n                    {genres.map((genre, index)=>\r\n                    <li key={index} className=\"genres__genre\">\r\n\r\n                        {genre}        \r\n                    </li>)}\r\n                </ul>\r\n                <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMovies.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movies;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Movise from './Movies';\nimport './App.css'\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [movies, setMovies] = useState([]);\n\n  const getMovies = async () => {\n    const { data: { data: { movies } } } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    \n    setMovies(movies);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    getMovies();\n  },[])\n\n  return (\n      <section className=\"container\">\n        {isLoading ?\n          <div className=\"loader\">\n            <span className=\"loader_text\">Loading...</span>\n          </div>\n          :\n          <div className=\"movies\">\n            {movies.map(movie => {\n              return (\n                <Movise\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image} \n                  genres={movie.genres}\n                  />\n              )\n            })}\n          </div>\n        }</section>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}